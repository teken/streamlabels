name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build for ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: amd64
            goos: linux
            goarch: amd64
            artifact_name: streamlabels-linux-amd64
          - os: ubuntu-latest
            arch: arm64
            goos: linux
            goarch: arm64
            artifact_name: streamlabels-linux-arm64
          - os: windows-latest
            arch: amd64
            goos: windows
            goarch: amd64
            artifact_name: streamlabels-windows-amd64.exe
          - os: macos-latest
            arch: amd64
            goos: darwin
            goarch: amd64
            artifact_name: streamlabels-darwin-amd64
          - os: macos-latest
            arch: arm64
            goos: darwin
            goarch: arm64
            artifact_name: streamlabels-darwin-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.3'
          cache: true

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          go build -ldflags="-s -w" -o ${{ matrix.artifact_name }} .
        
      - name: List built artifact (Linux/macOS)
        if: runner.os != 'Windows'
        run: ls -la ${{ matrix.artifact_name }}

      - name: List built artifact (Windows)
        if: runner.os == 'Windows'
        run: Get-ChildItem ${{ matrix.artifact_name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: List downloaded artifacts
        run: |
          echo "Contents of dist directory:"
          ls -la dist/
          echo "Contents of subdirectories:"
          find dist/ -type f -exec ls -la {} \;

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 